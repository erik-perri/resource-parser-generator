import {relatedResourceBaseParser, relatedResourceShortFormatNotNamedLikeFormatNameParser, relatedResourceVerboseParser} from './relatedResourceParsers';
import {boolean, nullable, number, object, optional, output, string, union} from 'zod';

export const userResourceBaseParser = object({
  id: string(),
  email: string(),
  created_at: nullable(string()),
});

export type UserResourceBase = output<typeof userResourceBaseParser>;

export const userResourceCombinedParser = object({
  email: nullable(string()),
  name: optional(string()),
});

export type UserResourceCombined = output<typeof userResourceCombinedParser>;

export const userResourceTernariesParser = object({
  ternary_to_int: number(),
  ternary_to_compound: union([boolean(), number(), string()]),
  short_ternary: string(),
});

export type UserResourceTernaries = output<typeof userResourceTernariesParser>;

export const userResourceRelatedResourceParser = object({
  with_format_default: relatedResourceBaseParser,
  with_format_short: relatedResourceShortFormatNotNamedLikeFormatNameParser,
  with_format_verbose: relatedResourceVerboseParser,
});

export type UserResourceRelatedResource = output<typeof userResourceRelatedResourceParser>;
